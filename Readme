
***********     BROWSER DRIVER SETUP   ******************
Before running any test in robot via Frontend, it's necessary to set all drivers binary into Environment Variable.
The best way to do that is to gather all driver into one folder and map that folder into Environment Variable, inside PATH
With that folder configured inside PATH, robot will search for the drivers in all directories inside PATH 

Downloads:
Chromedriver: https://chromedriver.chromium.org/downloads
Geckodriver:  https://github.com/mozilla/geckodriver/releases
Edgedriver:   https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/     

Driver name should be:
Chrome      ->      chromedriver.exe
Firefox     ->      geckodriver.exe
Edge        ->      MicrosoftWebDriver.exe

Note: Always make sure that your current browser version is the same as the driver you're downloading

**********    PIP PACKAGES     *********************
Extracted date -> May, 28th 2021

pip install requests
pip install robotframework
pip install robotframework-jsonlibrary
pip install robotframework-pythonlibcore
pip install robotframework-requests
pip install robotframework-selenium2library
pip install robotframework-seleniumlibrary
pip install robotframework-stringformat
pip install selenium
pip install msedge-selenium-tools
pip install robotframework-databaselibrary
pip install PyMySQL

To install all packages, use " pip install -r requirements.txt " to download the latest version of all packages

************   PYTHON VERSION    ******************
For Windows
Python Version -> Python 3.9.4

For MacOS
Python Version -> Python 3.9.4

*********    COMMAND LINE    **********
robot -d ./logs -i tagName -v NAME:VALUE folder\directory or folder\directory\fileName.robot

-d ./path/to/logs       ->   Means that it'll be created the robot test report into logs folder. Usually it's always the same directory
-i tagName              ->   Means that it'll run just the scenarios with that tag. For multiple tag, use AND. (e.g. -> tagNameANDanothertagName) 
-v NAME:VALUE           ->   Means that it'll set a global variable into the test.
-R path/to/output.xml   ->   Means that it'll run all failed scenarios from output.xml file  

For variables, always use BROWSER (for Frontend tests). if you don't send those variables, the code won't
know which browser use to run the test.

e.g. -> -v BROWSER:chrome    ->   Run test in chrome
e.g. -> -v BROWSER:firefox   ->   Run test in firefox

For BROWSER there is:
- chrome
- firefox
- edge
